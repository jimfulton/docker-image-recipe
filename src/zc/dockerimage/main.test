From README.rst::

  /my
    /application: dockerimage
      version = "0.1.0" # dockerimage version
      image = "fooimage:1.0"
      ports = "8080:8080 8000-8009:9000-9009 =:20,21 =:3000-3009 8081"
      /environment
        url = "http://example.com"

.. -> tree

    >>> import zc.zk
    >>> zk = zc.zk.ZK('zookeeper:2181')
    >>> zk.import_tree(tree)

    >>> from zc.metarecipe.testing import Buildout
    >>> import pkg_resources
    >>> recipe = pkg_resources.load_entry_point(
    ...     'zc.dockerimage', 'zc.buildout', 'default')

    >>> _ = recipe(Buildout(), 'my,application.0',
    ...            dict(recipe='zc.dockerimage'))
    ... # doctest: +NORMALIZE_WHITESPACE
    [deployment]
    name = my,application.0
    recipe = zc.recipe.deployment
    user = root
    [container]
    deployment = deployment
    program = docker run -rm
     -h application.my.o-o.app42.example.com
     -p 8080:8080
     -p 8000:9000 -p 8001:9001 -p 8002:9002 -p 8003:9003 -p 8004:9004
     -p 8005:9005 -p 8006:9006 -p 8007:9007 -p 8008:9008 -p 8009:9009
     -p 20:20 -p 21:21
     -p 3000:3000 -p 3001:3001 -p 3002:3002 -p 3003:3003 -p 3004:3004
     -p 3005:3005 -p 3006:3006 -p 3007:3007 -p 3008:3008 -p 3009:3009
     -p 8081
     -e=url=http://example.com
     fooimage:1.0
    recipe = zc.zdaemonrecipe
    [rc]
    chkconfig = 345 99 10
    deployment = deployment
    digest = aa5c9b11344ff56beda6e7d349b9283e
    parts = container
    process-management = true
    recipe = zc.recipe.rhrc

Here are some variations that use a short hand for all ports::

  /my
    /application: dockerimage
      version = "0.1.0" # dockerimage version
      image = "fooimage:1.0"
      ports = "*"

.. -> tree

    >>> zk.import_tree(tree, trim=True)
    >>> _ = recipe(Buildout(), 'my,application.1', {})
    ... # doctest: +NORMALIZE_WHITESPACE
    [deployment]
    name = my,application.1
    recipe = zc.recipe.deployment
    user = root
    [container]
    deployment = deployment
    program = docker run -rm
      -h n1.application.my.o-o.app42.example.com
      -P fooimage:1.0
    recipe = zc.zdaemonrecipe
    [rc]
    chkconfig = 345 99 10
    deployment = deployment
    digest = bb4d5712d710d7f749fd3173c1b68794
    parts = container
    process-management = true
    recipe = zc.recipe.rhrc

::

  /my
    /application: dockerimage
      version = "0.1.0" # dockerimage version
      image = "fooimage:1.0"
      ports = "=:*"

.. -> tree

    >>> zk.import_tree(tree)
    >>> _ = recipe(Buildout(), 'my,application.0', {})
    ... # doctest: +NORMALIZE_WHITESPACE
    [deployment]
    name = my,application.0
    recipe = zc.recipe.deployment
    user = root
    [container]
    deployment = deployment
    program = docker run -rm
     -h application.my.o-o.app42.example.com
     -p 20:20 -p 21:21 -p 24:24
     -p 3000:3000 -p 3001:3001 -p 3002:3002 -p 3003:3003 -p 3004:3004
     -p 3005:3005 -p 3006:3006 -p 3007:3007 -p 3008:3008 -p 3009:3009
     -p 32:32 -p 8080:8080 -p 8081:8081
     -p 9000:9000 -p 9001:9001 -p 9002:9002 -p 9003:9003 -p 9004:9004
     -p 9005:9005 -p 9006:9006 -p 9007:9007 -p 9008:9008 -p 9009:9009
     fooimage:1.0
    recipe = zc.zdaemonrecipe
    [rc]
    chkconfig = 345 99 10
    deployment = deployment
    digest = a7ab19998c28dc1a1c795b4a9a15d509
    parts = container
    process-management = true
    recipe = zc.recipe.rhrc

We'll get an error if we refer to unexposed ports::

  /my
    /application: dockerimage
      version = "0.1.0" # dockerimage version
      image = "fooimage:1.0"
      ports = "42"

.. -> tree

    >>> zk.import_tree(tree)
    >>> _ = recipe(Buildout(), 'my,application.0', {}) # doctest: +ELLIPSIS
    Traceback (most recent call last):
    ...
    AssertionError: ('port not exposed', 42, set([...]))

Here's an example with more involved volume mapping::

  /my
    /application: dockerimage
      version = "0.1.0" # dockerimage version
      image = "barimage:0.1.0"
      ports = "8080"
      /volumes
        svn = "/mnt/svn"
        /home
          ftp = "/mnt/ftp"
        /var
          /log
            myapp = "${deployment:log-directory}"

.. -> tree

    >>> zk.import_tree(tree)
    >>> _ = recipe(Buildout(), 'my,application.0', {})
    ... # doctest: +NORMALIZE_WHITESPACE
    [deployment]
    name = my,application.0
    recipe = zc.recipe.deployment
    user = root
    [container]
    deployment = deployment
    program = docker run -rm
     -h application.my.o-o.app42.example.com
     -p 8080
     -v=/mnt/ftp:/home/ftp
     -v=/mnt/svn:/svn
     -v=${deployment:log-directory}:/var/log/myapp
     barimage:0.1.0
    recipe = zc.zdaemonrecipe
    [rc]
    chkconfig = 345 99 10
    deployment = deployment
    digest = 718c7081f57b6ffe0a9b8a0a847f7689
    parts = container
    process-management = true
    recipe = zc.recipe.rhrc

.. cleanup

    >>> zk.close()
